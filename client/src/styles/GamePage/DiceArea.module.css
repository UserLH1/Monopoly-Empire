.diceArea {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
  padding: 15px;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 10px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  max-width: 200px;
  margin: 0 auto;
}

.diceContainer {
  display: flex;
  gap: 20px;
}

.dice {
  width: 50px;
  height: 50px;
  border-radius: 8px;
  background: white;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.2);
  position: relative;
  transition: transform 0.2s;
}

.dice.rolling {
  animation: roll 0.6s infinite;
}

@keyframes roll {
  0% { transform: rotateX(0deg) rotateY(0deg); }
  25% { transform: rotateX(90deg) rotateY(45deg); }
  50% { transform: rotateX(180deg) rotateY(90deg); }
  75% { transform: rotateX(270deg) rotateY(135deg); }
  100% { transform: rotateX(360deg) rotateY(180deg); }
}

.face {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  padding: 5px;
}

.dot {
  background-color: #333;
  border-radius: 50%;
}

.dice[data-value="1"] .dot:nth-child(1) {
  grid-column: 2;
  grid-row: 2;
}

/* Additional dot patterns for other dice values would go here */

.rollButton {
  background: #e94560;
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: bold;
  transition: background 0.3s;
}

.rollButton:hover:not(:disabled) {
  background: #ff6b6b;
}

.rollButton:disabled {
  background: #aaa;
  cursor: not-allowed;
}