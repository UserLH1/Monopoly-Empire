openapi: 3.0.3
info:
  title: Monopoly Empire API
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /games:
    get:
      summary: List all games
      operationId: listGames
      responses:
        '200':
          description: A list of games
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
    post:
      summary: Create a new game
      operationId: createGame
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameInput'
      responses:
        '201':
          description: Game created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
  
  /games/{gameId}:
    get:
      summary: Get a single game by ID
      operationId: getGame
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of a single game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '404':
          description: Game not found
  
  /players:
    get:
      summary: List all players
      operationId: listPlayers
      responses:
        '200':
          description: A list of players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
    post:
      summary: Create a new player
      operationId: createPlayer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerInput'
      responses:
        '201':
          description: Player created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
  
  /players/{playerId}:
    get:
      summary: Get a player by ID
      operationId: getPlayer
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Player details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '404':
          description: Player not found

  /brandProperties:
    get:
      summary: List brand properties on the board
      operationId: listBrandProperties
      responses:
        '200':
          description: A list of brand properties
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BrandProperty'
    post:
      summary: Create a new brand property
      operationId: createBrandProperty
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandPropertyInput'
      responses:
        '201':
          description: Brand property created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandProperty'

components:
  schemas:
    Game:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        currentPlayerId:
          type: string
        createdAt:
          type: string
          format: date-time
    GameInput:
      type: object
      properties:
        numberOfPlayers:
          type: integer
        # alte campuri de init
      required:
        - numberOfPlayers

    Player:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        money:
          type: integer
        position:
          type: integer
        towerSize:
          type: integer
    PlayerInput:
      type: object
      properties:
        name:
          type: string
        # alte campuri
      required:
        - name

    BrandProperty:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        cost:
          type: integer
        rent:
          type: integer
        ownedBy:
          type: string
    BrandPropertyInput:
      type: object
      properties:
        name:
          type: string
        cost:
          type: integer
        rent:
          type: integer
      required:
        - name
        - cost
        - rent
